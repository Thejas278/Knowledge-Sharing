TekSystems
--------------------------------------------------------------
Gradel
Written in groovy language which is a combination of ant and maven.. (has advantages of both and does not have disadvantages of both)
dsl
under dependencies we have 
	testcompile- depedency used for test
	compile-dependency used to compile
	




---------------------------------------------------------------
Data Structures

Rules for writing BigO Notation
Big O Notation is used ti check the performance of the algorithm

Order based on most efficient one
1. O(1)
2. O(N)
3. O(log n)- Searching Algorithms- Binary search
4. O(n log n)- Sorting Algorithms
5. O(n^2)- This is exponential , we should never write a algorithm with this complexity

Rules to remember while calculating the time complexity
1.Ignore the constants 
	eg O(500) -> O(1)
	O(13n^2) -> O(n^2)
2.Always conside the worst scenario eg if there are 2 complexities for a algoright eg: O(n) and O(n^2) , the complexity of the algorithm is O(n^2)
3.Arithmatic operations like addition ,multiplication are constants
4.Acessing elements in array is also constant

How to measure using the timecomplexity using log

If we want to devide and conquor 
eg : If we want to find a person in a phone book , we search based on his starting letter etc so our 

The most common attributes of logarithmic running-time function are that:
the choice of the next element on which to perform some action is one of several possibilities, and
only one will need to be chosen.

Some Example for better understanding

	O(1) (best case): Given the page that a business's name is on and the business name, find the phone number.

	O(1) (average case): Given the page that a person's name is on and their name, find the phone number.	

	O(log n): Given a person's name, find the phone number by picking a random point about halfway through the part of the book you haven't searched yet, then checking to see whether the person's name is at that point. Then repeat the process about halfway through the part of the book where the person's name lies. (This is a binary search for a person's name.)

	O(n): Find all people whose phone numbers contain the digit "5".

	O(n): Given a phone number, find the person or business with that number.

	O(n log n): There was a mix-up at the printer's office, and our phone book had all its pages inserted in a random order. Fix the ordering so that it's correct by looking at the first name on each page and then putting that page in the appropriate spot in a new, empty phone book.

Space Complexity

Memory usage for execution

Instruction Space- The space used to stor the compiled instrutions
Environmental Stack- For example, If a function A() calls function B() inside it, then all th variables of the function A() will    						get stored on the system stack temporarily, while the function B() is called and executed inside the funciton A()

Data Space- Where the variables and constants are stored

For space complexity we only consider the data space

	boolean,char,unsigned char ,signed char etc -1 byte
	short,unsigned short - 2bytes
	float,long,unsignedint,unsigned long- 4 bytes
	double,long double,long long - bytes

	




-----------------------------------------------------------------------------------------------------------------------------------
Sql vs Nosql database

Nosql database
1.Insertion and retrieval is eifficient since there are no joins required
2.Schema is easily changable- We alter the schema without effecting the exisiting records ie its easier
3.Built for scalability or sharding or horizonatl partition
4.These systems are build for aggregation ie to get the intelligent data

Disadvantage
1.update=delete+insert ie updates are not nice or easy means ACID is not guarented
2.RElationa constraint is not possible
3.Joining is also not efficient





